apply plugin: JavaPlugin

buildDir = 'target/gradle-build'
       
libraryVersions = [
    tapestry: '5.3.7', javaeeapi: '6.0-4', tomee : '1.5.1', junit: '4.8.1', arquillian: '1.1.1.Final', jbossJavaeeSpec: '1.0.0.Final', weld: '1.1.1.Final',
    slf4j: '1.5.10', log4j: '1.2.14', jbossAS6: '6.0.0.Final', glassfish: '4.0-b72', cdi: '1.0-SP4',
    hamcrest: '1.2', jbossAS7: '7.1.1.Final', shrinkwrapDesc: '2.0.0-alpha-3'
]

repositories {
    mavenCentral()
    // enable if you want to use snapshots published locally
    //mavenRepo urls: 'file://' + System.getProperty('user.home') + '/.m2/repository'
    mavenRepo urls: 'http://repository.jboss.org/nexus/content/groups/public'
    mavenRepo urls: 'http://repository.jboss.org/nexus/content/repositories/deprecated'
}

configurations {
    compileOnly
    tomeeEmbeddedTestRuntime { extendsFrom testRuntime, compileOnly }
}

dependencies {
   compile group: 'org.apache.tapestry', name: 'tapestry-core', version: libraryVersions.tapestry

   // replace javax.enterprise:cdi-api with group: 'org.jboss.spec', name: 'jboss-javaee-6.0', version: libraryVersions.jbossJavaeeSpec to compile against full Java EE API
   compileOnly group: 'javax.enterprise', name: 'cdi-api', version: libraryVersions.cdi

   testCompile group: 'org.apache.tapestry', name: 'tapestry-test', version: libraryVersions.tapestry
   testCompile group: 'org.apache.openejb', name: 'ziplock', version: '1.5.1'
   
   testCompile group: 'junit', name: 'junit', version: libraryVersions.junit
   testCompile group: 'org.jboss.arquillian.junit', name: 'arquillian-junit-container', version: libraryVersions.arquillian
   testCompile group: 'org.jboss.shrinkwrap.descriptors', name: 'shrinkwrap-descriptors-api-javaee', version: libraryVersions.shrinkwrapDesc
   testRuntime group: 'org.jboss.shrinkwrap.descriptors', name: 'shrinkwrap-descriptors-impl-javaee', version: libraryVersions.shrinkwrapDesc
    
   tomeeEmbeddedTestRuntime group: 'org.apache.openejb', name: 'arquillian-tomee-embedded', version: libraryVersions.tomee
}

sourceSets {
    main {
        compileClasspath = configurations.compile + configurations.compileOnly
    }
    test {
        compileClasspath = compileClasspath + configurations.compileOnly
    }
}

task tomeeEmbeddedTest(type: Test)

tasks.withType(Test).matching({ t-> t.name.endsWith('Test') } as Spec).each { t ->
    t.testClassesDir = sourceSets.test.classesDir
    t.classpath = sourceSets.test.classes + sourceSets.main.classes + configurations[t.name + 'Runtime']
}

jar {	

	manifest {	
		attributes 'Tapestry-Module-Classes': 'org.got5.tapestry5.cdi.CDIInjectModule'
		}
 }